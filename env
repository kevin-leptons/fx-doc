#!/usr/bin/env python3

import os
import sys
import re
from sys import argv
from os import path
from shutil import rmtree
from subprocess import Popen


project_dir = path.realpath(path.dirname(__file__))
venv_dirname = 'venv'
venv_dir = path.join(project_dir, venv_dirname)

def cli_help():
    print('USAGE')
    print(' {} COMMAND'.format(argv[0]))
    print('')
    print('COMMANDS')
    print(' init        Initialize venv')
    print(' install     Install both dev and req packages into venv')
    print(' clean       Clean venv files')
    print(' help        Show help information')


def install_venv():
    cmd = ['pip', 'install', 'virtualenv']
    if Popen(cmd).wait():
        msg = 'Run: "{}"'.format(' '.join(cmd))
        raise RuntimeError(msg)


def init_venv():
    cmd = ['virtualenv', '--python', sys.executable, venv_dirname]
    if Popen(cmd).wait():
        msg = 'Popen "{}"'.format(' '.join(cmd))
        raise RuntimeError(msg)

def is_venv():
    venv_dir_reg = re.compile('^{}.*'.format(venv_dir))
    for sys_path in sys.path:
        if venv_dir_reg.match(sys_path):
            return True
    return False


def cli_init():
    if is_venv():
        msg = 'Popen "deactive" to exit venv before initialize it'
        raise RuntimeError(msg)

    install_venv()
    init_venv()


def install_dev_packages():
    cmd = ['pip', 'install', '-r', 'dev-requires.txt']
    if Popen(cmd).wait():
        msg = 'Popen "{}"'.format(' '.join(cmd))
        raise RuntimeError(msg)


def install_req_packages():
    cmd = ['pip', 'install', '-e', '.']
    if Popen(cmd).wait():
        msg = 'Popen "{}"'.format(' '.join(cmd))
        raise RuntimeError(msg)


def cli_install():
    if not is_venv():
        msg_fmt = 'Run ". ./{}/bin/activate" to enter venv before install'
        raise RuntimeError(msg_fmt.format(venv_dirname))

    install_dev_packages()
    install_req_packages()


def cli_clean():
    if is_venv():
        raise RuntimeError('Run "deactivate" to exit venv before clean it')

    if path.isdir(venv_dir):
        rmtree(venv_dir)

    egg_dir = path.join(project_dir, 'elmetrix.egg-info')
    if path.isdir(egg_dir):
        rmtree(egg_dir)


# HANDLE COMMAND LINE

if len(argv) != 2:
    cli_help()
    exit(1)

cmd = argv[1]
if cmd == 'init':
    cli_init()
elif cmd == 'install':
    cli_install()
elif cmd == 'clean':
    cli_clean()
elif cmd == 'help':
    cli_help()
else:
    cli_help()
    exit(1)
